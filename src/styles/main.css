
html,
body {
    margin: 0;
    width: 100%;
    height: 100%;
}

.grid-container {
    /* Contain the grid with a 5:4 aspect ratio and responsively scale */
    width: min(98vw, calc(90vh * 5 / 4));
    aspect-ratio: 5 / 4;

    /* Center horizontally and give a small vertical margin */
    margin: 12px auto;

    /* Define a 5-column, 4-row grid with a small gap */
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(4, 1fr);
    gap: 8px;
}

.tile {
/* Make each cell maintain a square aspect via the container's uniform row heights */
width: 100%;
height: 100%;
overflow: hidden;
border-radius: 8px;
}

.tile img {
/* Ensure the image covers the cell, centered and cropped if necessary */
width: 100%;
height: 100%;
object-fit: cover;
}

.tile {
  transition: transform 0.2s cubic-bezier(.4,0,.2,1);
}
.tile:hover {
  transform: scale(1.04);
  cursor: pointer;
}


.github-corner:hover .octo-arm {
    animation: octocat-wave 560ms ease-in-out;
}

@keyframes octocat-wave {
    0%, 100% { transform: rotate(0); }
    20%, 60% { transform: rotate(-25deg); }
    40%, 80% { transform: rotate(10deg); }
}

@media (max-width: 500px) {
    .github-corner:hover .octo-arm { animation: none; }
    .github-corner .octo-arm { animation: octocat-wave 560ms ease-in-out; }
}

/* JavaScript will control visibility */
.github-corner.hidden {
    display: none !important;
}


.hidden {
    display: none !important;
}

/* wrap & position dynamically */
.top-left-container {
  position: absolute;
  top: clamp(8px, 2vw, 16px);
  left: clamp(8px, 2vw, 16px);
  z-index: 10;
  display: flex;
  flex-wrap: wrap;
  gap: clamp(4px, 1vw, 8px);
}


/*******************************************************************************
New Game Button - Mobile Responsive
*******************************************************************************/

.buttonNG {
  display: inline-block;
  border-radius: 8px;
  background-color: #f4511e;
  border: none;
  color: #FFFFFF;
  text-align: center;
  font-size: clamp(18px, 4vw, 24px); /* Responsive font size */
  padding: clamp(8px, 2vw, 12px) clamp(12px, 3vw, 16px); /* Responsive padding */
  width: min(200px, 90vw); /* Responsive width with max constraint */
  max-width: 200px;
  min-width: 120px; /* Minimum usable width */
  transition: all 0.3s ease; /* Faster transition for better mobile feel */
  cursor: pointer;
  margin: 5px;
  box-sizing: border-box; /* Ensure padding doesn't break layout */
  touch-action: manipulation; /* Improve touch responsiveness */
  -webkit-tap-highlight-color: transparent; /* Remove blue highlight on mobile */
}

.buttonNG span {
  cursor: pointer;
  display: inline-block;
  position: relative;
  transition: 0.3s ease;
}

.buttonNG span:after {
  content: '\00bb';
  position: absolute;
  opacity: 0;
  top: 0;
  right: -20px;
  transition: 0.3s ease;
}

/* Hover effects for desktop */
@media (hover: hover) and (pointer: fine) {
  .buttonNG:hover span {
    padding-right: 25px;
  }
  
  .buttonNG:hover span:after {
    opacity: 1;
    right: 0;
  }
  
  .buttonNG:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  }
}

/* Active state for touch devices */
.buttonNG:active {
  transform: translateY(1px);
  background-color: #e64100; /* Slightly darker on press */
}

/* Small screens (phones) */
@media screen and (max-width: 480px) {
  .buttonNG {
    font-size: 20px;
    padding: 12px 16px;
    width: min(180px, 85vw);
    margin: 8px 0; /* Vertical margin for stacked layout */
  }
}

/* Extra small screens */
@media screen and (max-width: 320px) {
  .buttonNG {
    font-size: 18px;
    padding: 10px 14px;
    width: min(160px, 80vw);
  }
}

/* Large screens - maintain original appearance */
@media screen and (min-width: 1024px) {
  .buttonNG {
    font-size: 24px;
    padding: 12px 16px;
    width: 200px;
  }
}

/*******************************************************************************
Spymaster switch
*******************************************************************************/

.spymaster-container {
  padding: clamp(8px, 2vw, 12px) clamp(12px, 3vw, 16px);
  box-sizing: border-box;
  border: 2px solid black;
  border-radius: clamp(4px, 1vw, 8px);
  display: inline-flex;
  align-items: center;
  gap: clamp(6px, 2vw, 12px);
  font-size: clamp(18px, 4vw, 24px);
  background-color: transparent;
}

.spy {
  font-family: 'Press Start 2P', sans-serif;
  font-size: clamp(18px, 4vw, 24px);;
  line-height: 1;
  margin: 0;
}

/* ——— Responsive Switch ——— */
.switch {
  /* define sizing variables */
  --switch-w: clamp(40px, 8vw, 60px);
  --switch-h: clamp(24px, 5vw, 34px);
  --knob-size: clamp(16px, 4vw, 26px);
  --knob-offset: clamp(4px, 1vw, 4px);

  position: relative;
  display: inline-block;
  width: var(--switch-w);
  height: var(--switch-h);
  flex-shrink: 0;
  margin: 0;
}

.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0; left: 0; right: 0; bottom: 0;
  background-color: #ccc;
  transition: .4s;
  border-radius: var(--switch-h);
}

.slider:before {
  content: "";
  position: absolute;
  width: var(--knob-size);
  height: var(--knob-size);
  left: var(--knob-offset);
  bottom: var(--knob-offset);
  background-color: white;
  transition: .4s;
  border-radius: 50%;
}

input:checked + .slider {
  background-color: #2196F3;
}

input:focus + .slider {
  box-shadow: 0 0 1px #2196F3;
}

input:checked + .slider:before {
  /* slide all the way across */
  transform: translateX(
    calc(
      var(--switch-w)
      - var(--knob-size)
      - (var(--knob-offset) * 2)
    )
  );
}